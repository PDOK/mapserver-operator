apiVersion: v1
data:
  default_mapserver.conf: "..."
  input: |-
    "top-layer-name" "top-layer-style-1-name"
    "top-layer-name" "top-layer-style-2-name"
    "group-layer-name" "group-layer-style-1-name"
    "group-layer-name" "group-layer-style-2-name"
    "group-layer-name" "top-layer-style-1-name"
    "gpkg-layer-name" "gpkg-layer-style-1-name"
    "gpkg-layer-name" "gpkg-layer-style-2-name"
    "gpkg-layer-name" "top-layer-style-1-name"
    "gpkg-layer-name" "group-layer-style-2-name"
    "postgis-layer-name" "postgis-layer-style-1-name"
    "postgis-layer-name" "postgis-layer-style-2-name"
  legend-fixer.sh: |-
    #!/usr/bin/env bash
    set -eo pipefail
    echo "creating legends for root and group layers by concatenating data layers"
    input_filepath="/input/input"
    remove_filepath="/input/remove"
    config_filepath="/input/ogc-webservice-proxy-config.yaml"
    legend_dir="/var/www/legend"
    < "${input_filepath}" xargs -n 2 echo | while read -r layer style; do
      export layer
      # shellcheck disable=SC2016 # dollar is for yq
      if ! < "${config_filepath}" yq -e 'env(layer) as $layer | .grouplayers | keys | contains([$layer])' &>/dev/null; then
        continue
      fi
      export grouplayer="${layer}"
      grouplayer_style_filepath="${legend_dir}/${grouplayer}/${style}.png"
      # shellcheck disable=SC2016 # dollar is for yq
      datalayers=$(< "${config_filepath}" yq 'env(grouplayer) as $foo | .grouplayers[$foo][]')
      datalayer_style_filepaths=()
      for datalayer in $datalayers; do
        datalayer_style_filepath="${legend_dir}/${datalayer}/${style}.png"
        if [[ -f "${datalayer_style_filepath}" ]]; then
          datalayer_style_filepaths+=("${datalayer_style_filepath}")
        fi
      done
      if [[ -n "${datalayer_style_filepaths[*]}" ]]; then
        echo "concatenating ${grouplayer_style_filepath}"
        gm convert -append "${datalayer_style_filepaths[@]}" "${grouplayer_style_filepath}"
      else
        echo "no data for ${grouplayer_style_filepath}"
      fi
    done
    < "${remove_filepath}" xargs -n 2 echo | while read -r layer style; do
      remove_legend_file="${legend_dir}/${layer}/${style}.png"
      echo removing $remove_legend_file
      rm $remove_legend_file
    done
    echo "done"
  ogc-webservice-proxy-config.yaml: |-
    grouplayers:
      group-layer-name:
      - gpkg-layer-name
      - postgis-layer-name
      top-layer-name:
      - gpkg-layer-name
      - postgis-layer-name
      - tif-layer-name

  remove: |-
    "group-layer-name" "top-layer-style-1-name"
    "gpkg-layer-name" "top-layer-style-1-name"
immutable: true
kind: ConfigMap
metadata:
  labels:
    pdok.nl/app: mapserver
    dataset: dataset
    dataset-owner: datasetOwner
    pdok.nl/inspire: "true"
    service-type: wms
    service-version: v1_0
    theme: '2016'
  name: complete-wms-legend-generator-bmg7f9t24k
  namespace: default
  ownerReferences:
    - apiVersion: pdok.nl/v3
      kind: WMS
      name: complete
      uid: ""
      blockOwnerDeletion: true
      controller: true
