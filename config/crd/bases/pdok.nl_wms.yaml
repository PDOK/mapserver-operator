---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: wms.pdok.nl
spec:
  group: pdok.nl
  names:
    kind: WMS
    listKind: WMSList
    plural: wms
    singular: wms
  scope: Namespaced
  versions:
  - name: v2beta1
    schema:
      openAPIV3Schema:
        description: WMS is the Schema for the wms API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WMSSpec is the struct for all fields defined in the WMS CRD
            properties:
              general:
                description: General is the struct with all generic fields for the
                  crds
                properties:
                  dataVersion:
                    type: string
                  dataset:
                    type: string
                  datasetOwner:
                    type: string
                  serviceVersion:
                    type: string
                  theme:
                    type: string
                required:
                - dataset
                - datasetOwner
                type: object
              kubernetes:
                description: Kubernetes is the struct with all fields that can be
                  defined in kubernetes fields in the crds
                properties:
                  autoscaling:
                    description: Autoscaling is the struct with all fields to configure
                      autoscalers for the crs
                    properties:
                      averageCpuUtilization:
                        type: integer
                      maxReplicas:
                        type: integer
                      minReplicas:
                        type: integer
                    type: object
                  healthCheck:
                    description: HealthCheck is the struct with all fields to configure
                      healthchecks for the crs
                    properties:
                      boundingbox:
                        type: string
                      mimetype:
                        type: string
                      querystring:
                        type: string
                    type: object
                  lifecycle:
                    description: Lifecycle is the struct with the fields to configure
                      lifecycle settings for the resources
                    properties:
                      ttlInDays:
                        type: integer
                    type: object
                  resources:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              options:
                description: WMSWFSOptions is the struct with options available in
                  the operator
                properties:
                  automaticCasing:
                    type: boolean
                  disableWebserviceProxy:
                    type: boolean
                  includeIngress:
                    type: boolean
                  prefetchData:
                    type: boolean
                  rewriteGroupToDataLayers:
                    type: boolean
                  validateChildStyleNameEqual:
                    type: boolean
                  validateRequests:
                    type: boolean
                required:
                - automaticCasing
                - includeIngress
                type: object
              service:
                description: WMSService is the struct for all service level fields
                properties:
                  abstract:
                    type: string
                  accessConstraints:
                    type: string
                  authority:
                    description: Authority is a struct for the authority fields in
                      WMS and WFS crds
                    properties:
                      name:
                        type: string
                      url:
                        type: string
                    required:
                    - name
                    - url
                    type: object
                  dataEPSG:
                    type: string
                  defResolution:
                    type: integer
                  extent:
                    type: string
                  inspire:
                    type: boolean
                  keywords:
                    items:
                      type: string
                    type: array
                  layers:
                    items:
                      description: WMSLayer is the struct for all layer level fields
                      properties:
                        abstract:
                          type: string
                        data:
                          description: Data is a struct for the data field for a WMSLayer
                            or WFS FeatureType
                          properties:
                            gpkg:
                              description: GPKG is a struct for the gpkg field for
                                a WMSLayer or WFS FeatureType
                              properties:
                                aliases:
                                  additionalProperties:
                                    type: string
                                  description: In a new version Aliases should become
                                    part of Columns
                                  type: object
                                blobKey:
                                  type: string
                                columns:
                                  items:
                                    type: string
                                  type: array
                                geometryType:
                                  type: string
                                table:
                                  type: string
                              required:
                              - blobKey
                              - columns
                              - geometryType
                              - table
                              type: object
                            postgis:
                              description: |-
                                Postgis is a struct for the Postgis db config for a WMSLayer or WFS FeatureType
                                connection details are passed through the environment
                              properties:
                                aliases:
                                  additionalProperties:
                                    type: string
                                  description: In a new version Aliases should become
                                    part of Columns
                                  type: object
                                columns:
                                  items:
                                    type: string
                                  type: array
                                geometryType:
                                  type: string
                                table:
                                  type: string
                              required:
                              - columns
                              - geometryType
                              - table
                              type: object
                            tif:
                              description: Tif is a struct for the Tif field for a
                                WMSLayer
                              properties:
                                blobKey:
                                  type: string
                                getFeatureInfoIncludesClass:
                                  type: boolean
                                offsite:
                                  type: string
                                resample:
                                  type: string
                              required:
                              - blobKey
                              type: object
                          type: object
                        datasetMetadataIdentifier:
                          type: string
                        extent:
                          type: string
                        group:
                          type: string
                        keywords:
                          items:
                            type: string
                          type: array
                        labelNoClip:
                          type: boolean
                        maxScale:
                          type: string
                        minScale:
                          type: string
                        name:
                          type: string
                        sourceMetadataIdentifier:
                          type: string
                        styles:
                          items:
                            description: Style is the struct for all style level fields
                            properties:
                              abstract:
                                type: string
                              legendfile:
                                description: LegendFile is the struct containing the
                                  location of the legendfile
                                properties:
                                  blobKey:
                                    type: string
                                required:
                                - blobKey
                                type: object
                              name:
                                type: string
                              title:
                                type: string
                              visualization:
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        title:
                          type: string
                        visible:
                          type: boolean
                      required:
                      - name
                      - styles
                      - visible
                      type: object
                    type: array
                  mapfile:
                    description: Mapfile contains the ConfigMapKeyRef containing a
                      mapfile
                    properties:
                      configMapKeyRef:
                        description: Selects a key from a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - configMapKeyRef
                    type: object
                  maxSize:
                    type: string
                  metadataIdentifier:
                    type: string
                  resolution:
                    type: integer
                  stylingAssets:
                    description: StylingAssets is the struct containing the location
                      of styling assets
                    properties:
                      blobKeys:
                        items:
                          type: string
                        type: array
                      configMapRefs:
                        items:
                          description: |-
                            ConfigMapRef contains all the config map name and all keys in that configmap that are relevant
                            the Keys can be empty, so that the v1 WMS can convert to the v2beta1 WMS
                          properties:
                            keys:
                              items:
                                type: string
                              type: array
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                    required:
                    - blobKeys
                    type: object
                  title:
                    type: string
                required:
                - abstract
                - accessConstraints
                - authority
                - dataEPSG
                - inspire
                - keywords
                - layers
                - metadataIdentifier
                - title
                type: object
            required:
            - general
            - kubernetes
            - options
            - service
            type: object
          status:
            description: Status - The status for custom resources managed by the operator-sdk.
            properties:
              conditions:
                items:
                  description: |-
                    Condition - the condition for the ansible operator
                    https://github.com/operator-framework/operator-sdk/blob/master/internal/ansible/controller/status/types.go#L101
                  properties:
                    ansibleResult:
                      description: ResultAnsible - encapsulation of the ansible result.
                        'AnsibleResult' is turned around in struct to comply with
                        linting
                      properties:
                        changed:
                          type: integer
                        completion:
                          type: string
                        failures:
                          type: integer
                        ok:
                          type: integer
                        skipped:
                          type: integer
                      required:
                      - changed
                      - completion
                      - failures
                      - ok
                      - skipped
                      type: object
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      description: ConditionStatus specifies a string for field ConditionType
                      type: string
                    type:
                      description: ConditionType specifies a string for field ConditionType
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deployment:
                type: string
              resources:
                items:
                  description: Resources is the struct for the resources field within
                    status
                  properties:
                    apiversion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v3
    schema:
      openAPIV3Schema:
        description: WMS is the Schema for the wms API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WMSSpec defines the desired state of WMS.
            properties:
              foo:
                description: Foo is an example field of WMS. Edit wms_types.go to
                  remove/update
                type: string
            type: object
          status:
            description: WMSStatus defines the observed state of WMS.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
